package main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JPanel;

public class GamePanel extends JPanel implements Runnable{
	
	private final int originalTileSize = 16;
	private final int resize = 3;
	
	private final int tileSize = resize * originalTileSize;
	private final int maxTileHorizontal = 16;
	private final int maxTileVertical = 12;	
	
	private final int telaLargura = tileSize * maxTileHorizontal; //768
	private final int telaAltura = tileSize * maxTileVertical; //576
	
	private final int fps = 60; //576
	private final double updateInterval = 1000/fps;
	
	
	Thread gameThread;
	
	KeyboardInput keyI = new KeyboardInput();
	
	Player player = new Player(this, KeyI);
	
	public GamePanel() {
		this.setPreferredSize(new Dimension(telaLargura, telaAltura));
		this.setBackground(Color.DARK_GRAY);
		this.setDoubleBuffered(true);
		
		this.addKeyListener(keyI);
		this.setFocusable(true);
	}
	
	public void startGameThread() {
		gameThread = new Thread(this);
		gameThread.start();
	}

	@Override
	public void run() {
		
		double delta = 0;
		long lastTime = System.currentTimeMillis();
		long currentTime;
		long timer = 0;
		int framesDesenhados = 0;
		
		while(gameThread != null) {
			 currentTime = System.currentTimeMillis();
			 delta += (currentTime - lastTime) / updateInterval; 
			 timer += (currentTime - lastTime);
			 lastTime = currentTime;
			 if (timer >= 1000) { //um segundo passou
				System.out.println("FPS:" + framesDesenhados);
				framesDesenhados = 0;
				timer = 0;
			}
			
			if (delta >= 1) {
				update();
				repaint();
				framesDesenhados++;
				delta--;
			}
		}	
	}
	
	public void update() {
		
	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Graphics2D g2 = (Graphics2D) g;
		
		
		
		g2.dispose();
	}
}
